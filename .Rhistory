Beta <- matrix(c(55, 0, 5), 3,1)
X%*% Beta
residuals<- y- (X %*% Beta)
RSS <- t(r) %*% r
X <- cbind(1, tt, tt^2)
# compute residual sum of square for any given beta:
Beta <- matrix(c(55, 0, 5), 3,1)
residuals<- y- (X %*% Beta)
RSS <- t(r) %*% r
RSS <- t(residuals) %*% residuals
rss(55,0,5)
RSS
crossprod(residuals)
betahat <- solve(t(x) %*% X) %*% t(X) %*% y
betahat <- solve(t(X) %*% X) %*% t(X) %*% y
betahat
fit
betahat <- solve(crossprod(X)) %*% crossprod(X,y)
QR <- qr(X)
Q <- qr.Q(QR)
R <- qr.R(QR)
backsolve(R, crossprod(Q,y))
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
X
beta <- c(5, 2)
X %*% beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
beta <- c(10,3,-3)
X %*% beta
lengths = c(100,200,300,100,100)
mat = cbind(c(1,1,0,1,0),c(1,1,1,1,1),c(0,1,1,0,1))
lengths %*% mat
mat
125+350+300+125+100
theta.hat=c(1,2,3)/1000
theta.hat
mat %*% theta.hat * lengths * w
lengths = c(100,200,300,100,100)
mat = cbind(c(1,1,0,1,0),c(1,1,1,1,1),c(0,1,1,0,1))
lengths %*% mat
w = 1000
counts = c(125,350,300,125,100)
theta.hat=c(1,2,3)/1000
mat %*% theta.hat * lengths * w
theta.hat=c(1,2,3)/10000
mat %*% theta.hat * lengths * w
LHS = counts/(lengths * w)
lm.fit(mat, LHS)$coefficients
w2 = 60,320,420,60,140
LHS = counts/(lengths * w2)
w2 = 6032042060140
LHS = counts/(lengths * w2)
lm.fit(mat, LHS)$coefficients
counts = c(60,320,420,60,140)
LHS = counts/(lengths * w)
lm.fit(mat, LHS)$coefficients
library(testit)
install.packages(testit)
install.packages("testit")
version("rmarkdown")
install.packages("rmarkdown")
setwd("Desktop/DataAnalysisCourses/SCW_workshop/")
setwd("~/altmetrics/")
getwd()
counts_raw <- read.delim("data//counts-raw.txt.gz")
ls()
dim(counts_raw)
dim(counts_raw)
head(counts_raw)
tail(counts_raw)
counts_raw[1, 10]
counts_raw[1:3, 10:12]
counts_raw[1:3,]
counts_raw[1:10, "pmid"]
names(counts_raw)
str(counts_raw$daysSincePublished)
head(counts_raw$daysSincePublished / 7)
is.numeric(counts_raw$daysSincePublished)
str(counts_raw$journal)
levels(counts_raw$journal)
counts_raw$authorsCount[1:10]
is.na(counts_raw$authorsCount[1:10])
anyNA(counts_raw$authorsCount[1:10])
summary(counts_raw$wosCountThru2011)
mean(counts_raw$wosCountThru2011)
hist(counts_raw$wosCountThru2011)
hist(sqrt(counts_raw$wosCountThru2011))
plot(counts_raw$daysSincePublished, counts_raw$wosCountThru2011)
counts_raw$authorsCount[1:10] > 7
counts_raw$authorsCount[1:10]
counts_raw$authorsCount[1:10] > 7
dim(counts_raw[counts_raw$journal == "pone",])
dim(counts_raw[counts_raw$journal != "pone",])
dim(counts_raw[counts_raw$journal %in% c("pone", "pbio", "pgen"),])
dim(counts_raw[grepl("Immunology", counts_raw$plosSubjectTags),])
if(anyNA(counts_raw$authorsCount)) {
print("Be Careful!")
} else {
print("Looking good!")
}
if(anyNA(c(1,1,1))) {
print("Be Careful!")
} else {
print("Looking good!")
}
dim(cars)
library("rmarkdown")
render("altmetrics_analysis.Rmd")
mean(counts_norm$facebookShareCount)
mean(counts_norm$facebookShareCount, na.rm = T)
for(i in 1:10){
print(i)
}
x <- numeric()
for (i in 1:length(counts_raw$wosCountThru2011)){
x <- c(x, counts_raw$wosCountThru2011[i] + 1)
}
x <- numeric(length = length(counts_raw$wosCountThru2011))
for (i in 1:length(counts_raw$wosCountThru2011)){
x <- c(x, counts_raw$wosCountThru2011[i] + 1)
}
x <- numeric(length = length(counts_raw$wosCountThru2011))
for (i in 1:length(counts_raw$wosCountThru2011)){
x[i] <- counts_raw$wosCountThru2011[i] + 1
}
level(counts_raw$journal)
levels(counts_raw$journal)
results <- numeric(length = length(levels(counts_raw$journal)))
results
names(results) <- levels(counts_raw$journal)
names(results) <- levels(counts_raw$journal)
results
results["pone"]
for (j in levels(counts_raw$journal)){
results[j] <- mean(counts_raw$wosCountThru2011[counts_raw$journal == j])
}
results
library("dplyr")
research <- filter(counts_raw, articleType == "Research Article")
research_2006 <- filter(research, year ==2006)
nro(research_2006)
nrow(research_2006)
nrow(research_2006)
facebookCommentCount >0)
research_2006_fb <- filter(research, year == 2006,
facebookCommentCount >0)
nrow(research_2006_fb)
research_2006_fb_tweet_disease <- filter(research, year == 2006,
facebookCommentCount >0 | backtweetsCount >0,
grepl("Infectious Diseases", plosSubjectTags))
nrow(research_2006_fb_tweet_disease)
colnames(resaerch)
colnames(research)
article_info <- select(research, doi, pubDate, journal, title, articleType, authorsCount)
colnmaes(article_info)
colnames(article_info)
article_info <- select(research, doi:authorsCount)
colnames(article_info)
metrics <- select(research, contains("Count"))
colnames(metrics)
metrics <- select(research, contains("Count"), -authorsCount)
colnames(metrics)
metrics <- select(research, contains("Count"), -authorsCount, f1000Factor, wikipediaCites)
colnames(metrics)
head(select(research, journal))
head(select(research, 3))
head(research)
slice(article_info, 1:3)
research %>% filter(cite <= 2008,
pdfDownloadsCount > 1000,
mendeleyReadersCount > 15,
wosCountThru2011 < 10) %>% head()
str(research$wosCountThru2011)
head(research$wosCountThru2011)
head(research$wosCountThru2011) >33
%>% filter(cite <= 2008,
research %>% filter(cite <= 2008,
pdfDownloadsCount > 1000,
mendeleyReadersCount > 15,
wosCountThru2011 < 10) %>% select(journal, title, year)
```
wosCountThru2011 < 10)
research %>% filter(cite <= 2008,
pdfDownloadsCount > 1000,
mendeleyReadersCount > 15,
wosCountThru2011 < 10)
head(research$wosCountThru2011) < 10
research %>% filter(cite <= 2008,
pdfDownloadsCount > 1000,
mendeleyReadersCount > 15) %>% select(journal, title, year)
low_cite <- research %>% filter(year <= 2008,
pdfDownloadsCount > 1000,
mendeleyReadersCount > 15,
wosCountThru2011 < 10) %>% select(journal, title, year)
nrow(low_cite)
head(research)
head(low_cite)
facebook_2006 <- research %>%
filter(year == 2006) %>%
select(contains("facebook"))
head(facebook_2006)
research %>% arrange(authorsCount, wosCountThru2011) %>%
select(authrosCount, wosCountThru2011) %>%
slice(1:10)
research %>% arrange(authorsCount, wosCountThru2011) %>%
select(authorsCount, wosCountThru2011) %>%
slice(1:10)
research %>% arrange(desc(authorsCount, wosCountThru2011)) %>%
select(authorsCount, wosCountThru2011) %>%
slice(1:10)
research %>% arrange(des(wosCountThru2011)) %>% select(title) %>% head
research %>% arrange(desc(wosCountThru2011)) %>% select(title) %>% head
research %>% arrange(desc(wosCountThru2011)) %>% select(title) %>% slice(1:3)
research %>% arrange(desc(authorsCount)) %>%
select(authorsCount, title, journal, plosSubjectTags) %>% slice(1:3)
research %>% arrange(desc(authorsCount)) %>%
select(authorsCount, title, journal, plosSubjectTags) %>% slice(1:3)
research <- research %>% mutate(weeksSincePublished = daySincePublished / 7)
research <- research %>% mutate(weeksSincePublished = daysSincePublished / 7)
research <- research %>% mutate(weeksSincePublished = daysSincePublished / 7,
yearsSincePublished = weeksSincePublished / 52)
research %<% select(contains("Since")) %>% slice(1:10)
research %>% select(contains("Since")) %>% slice(1:10)
research %>% summarize(plost_mean = mean(plosCommentCount))
research %>% summarize(plos_mean = mean(plosCommentCount))
plos_sd = sd(plosCommentCount))
research %>% summarize(plos_mean = mean(plosCommentCount), plos_sd = sd(plosCommentCount), num = n())
research %>% group_by(journal) %>%
summarize(tweets_mean = mean(backtweetsCount))
research %>% group_by(journal, year) %>%
summarize(tweets_mean = mean(backtweetsCount))
tweets_per_journal <- research %>%
group_by(journal) %>%
summarize(totalArticle = n(), tweets_mean = mean(backtweetsCount), SEM= sd(backtweetsCount)/sqrt(totalArticle))
tweets_per_journal
tweets_per_journal <- research %>%
group_by(journal) %>%
summarize(num = n(), tweets_mean = mean(backtweetsCount), sem = sd(backtweetsCount)/sqrt(num))
str(tweets_per_journal)
install.packages("pandoc")
library("ggplot2")
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011))
p + geom_point
p + geom_point()
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point()
p
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(aes(color = journal))
p
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(aes(size = authorsCount)) # size of the point is porportional to the number of authors
p
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(aes(alpha = daysSincePublished))
p
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(color = "red") # everything gets assigned red, regardless of the data
p
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(aes(color = journal)) + # adds on a new variable "journal"" and mapps the color based on that variable
geom_smooth()
p
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011,
color = journal)) +
geom_point()
geom_smooth()
p
p <- ggplot(data = research, mapping = aes(x = pdfDownloadsCount,
y = wosCountThru2011,
color = journal)) +
geom_point()+
geom_smooth()
p
# lesson 15 challenge 'Citations vs days since published'
p <- ggplot(data = research, mapping = aes(x = daysSincepublished,
y = wosCountThru2011)) +
geom_point(aes(color = journal), alpha = 0.5)
geom_smooth(color = red)
p <- ggplot(data = research, mapping = aes(x = daysSincepublished,
y = wosCountThru2011)) +
geom_point(aes(color = journal), alpha = 0.5) +
geom_smooth(color = red)
p
p <- ggplot(data = research, aes(x = daysSincepublished,
y = wosCountThru2011)) +
geom_point(aes(color = journal), alpha = 0.5) +
geom_smooth(color = "red")
p
p <- ggplot(data = research, aes(x = daysSincePublished,
y = wosCountThru2011)) +
geom_point(aes(color = journal), alpha = 0.5) +
geom_smooth(color = "red")
p
p <- ggplot(data = research, aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(aes(color = journal)) +
geom_smooth()
p + scal_x_log10() + scale_y_log10() # problem with zeros - intercept in the aes call
p <- ggplot(data = research, aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(aes(color = journal)) +
geom_smooth()
p + scale_x_log10() + scale_y_log10() # problem with zeros - intercept in the aes call
p <- ggplot(data = research, aes(x = log10(pdfDownloadsCount+1),
y = log10(wosCountThru2011+1))) +
geom_point(aes(color = journal)) +
geom_smooth()
p
p <- ggplot(data = research, aes(x = pdfDownloadsCount,
y = wosCountThru2011)) +
geom_point(aes(color = journal)) +
geom_smooth()
p + scale_x_log10() + scale_y_log10() # problem with zeros - intercept in the aes call
p <- ggplot(data = research, aes(x = log10(pdfDownloadsCount+1),
y = log10(wosCountThru2011+1))) +
geom_point(aes(color = journal)) +
geom_smooth() +
scale_x_continuous(breaks = c(1,3), labels = c(10, 1000))
p
p <- ggplot(data = research, aes(x = log10(pdfDownloadsCount+1),
y = log10(wosCountThru2011+1))) +
geom_point(aes(color = journal)) +
geom_smooth() +
scale_x_continuous(breaks = c(1,3), labels = c(10, 1000)) +
scale_y_continuous(breaks = c(1,3), labels = c(10, 1000)))
p <- ggplot(data = research, aes(x = log10(pdfDownloadsCount+1),
y = log10(wosCountThru2011+1))) +
geom_point(aes(color = journal)) +
geom_smooth() +
scale_x_continuous(breaks = c(1,3), labels = c(10, 1000)) +
scale_y_continuous(breaks = c(1,3), labels = c(10, 1000))
p
p <- ggplot(data = research, aes(x = log10(pdfDownloadsCount+1),
y = log10(wosCountThru2011+1))) +
geom_point(aes(color = journal)) +
geom_smooth() +
scale_x_continuous(breaks = c(1,3), labels = c(10, 1000)) +
scale_y_continuous(breaks = c(1,3), labels = c(10, 1000),
limits = c(1,3))
p
p + scale_color_grey()
p + scale_color_manual(values=c("red", "green", "blue", "orange", "pink", "yellow", "purple"))
```
library("RcolorBrewer")
library("RColorBrewer")
display.brewer.all(type = "qual")
p + scale_color_brewer(palette="Dark2")
p + scale_color_brewer(palette="Dark2",
labels = 1:7, name = "PLOS")
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount),
y = sqrt(wosCountThru2011))) +
geom_point(aes(color = journal)) +
geom_smooth() +
scale_x_continuous(breaks = c(1,3), labels = c(10, 1000)) +
scale_y_continuous(breaks = c(1,3), labels = c(10, 1000),
limits = c(1,3))
p + scale_color_brewer(palette = "Accent")
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount),
y = sqrt(wosCountThru2011))) +
geom_point(aes(color = journal)) +
geom_smooth())
p + scale_color_brewer(palette = "Accent")
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount+),
y = sqrt(wosCountThru2011+1))) +
geom_point(aes(color = journal)) +
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount),
y = sqrt(wosCountThru2011))) +
geom_point(aes(color = journal)) +
geom_smooth())
p + scale_color_brewer(palette = "Accent")
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount),
y = sqrt(wosCountThru2011))) +
geom_point(aes(color = journal)) +
geom_smooth()) +
scale_color_brewer(palette = "Accent")
p
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount),
y = sqrt(wosCountThru2011))) +
geom_point(aes(color = journal)) +
geom_smooth()) +
scale_color_brewer(palette = "Accent")
p
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount),
y = sqrt(wosCountThru2011))) +
geom_point(aes(color = journal)) +
geom_smooth() +
scale_color_brewer(palette = "Accent")
p
p + facet_wrap(~journal)
p + facet_wrap(~journal, ncol = 2)
research <- mutate(research, immuno = grepl("Immunology" plosSubjectTags))
research <- mutate(research, immuno = grepl("Immunology", plosSubjectTags))
p <- ggplot(data = research, aes(x = sqrt(pdfDownloadsCount),
y = sqrt(wosCountThru2011))) +
geom_point(aes(color = journal)) +
geom_smooth() +
scale_color_brewer(palette = "Accent")
p + facet_grid(journal~immuno)
p <- ggplot(data = research, aes(x = journal),
y = sqrt(wosCountThru2011))) +
geom_boxplot()
p
p <- ggplot(data = research, aes(x = journal),
y = sqrt(wosCountThru2011))) +
p <- ggplot(data = research, aes(x = journal),
y = sqrt(wosCountThru2011)) +
geom_boxplot()
p
tweets_bar <- ggplot(tweets_per_journal, aes(x = journal, y = mean)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem))
tweets_bar
tweets_per_journal <- research %>%
group_by(journal) %>%
summarize(num = n(), tweets_mean = mean(backtweetsCount), sem = sd(backtweetsCount)/sqrt(num))
tweets_bar <- ggplot(tweets_per_journal, aes(x = journal, y = mean)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.1)
tweets_bar
str(tweets_per_journal)
tweets_bar <- ggplot(tweets_per_journal, aes(x = journal, y = tweets_mean)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.1) +
geom_text(aes(label = num))
tweets_bar
tweets_bar <- ggplot(tweets_per_journal, aes(x = journal, y = tweets_mean)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin = tweets_mean - sem, ymax = tweets_mean + sem), width = 0.1) +
geom_text(aes(label = num))
tweets_bar
tweets_bar <- ggplot(tweets_per_journal, aes(x = journal, y = tweets_mean)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin = tweets_mean - sem, ymax = tweets_mean + sem), width = 0.1) +
geom_text(aes(label = num), hjust = 0, vjust = 0)
tweets_bar
tweets_per_journal <- research %>%
group_by(journal, year) %>%
summarize(num = n(), tweets_mean = mean(backtweetsCount), sem = sd(backtweetsCount)/sqrt(num))
tweets_per_journal_year <- research %>%
group_by(journal, year) %>%
summarize(num = n(), tweets_mean = mean(backtweetsCount), sem = sd(backtweetsCount)/sqrt(num))
tweets_bar <- ggplot(tweets_per_journal_year, aes(x = journal, y = tweets_mean)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin = tweets_mean - sem, ymax = tweets_mean + sem), width = 0.1) +
geom_text(aes(label = num), hjust = 0, vjust = 0)
tweets_bar + facet_wrap(~year)
tweets_bar + facet_wrap(~year, ncol = 2)
sd <- ggplot(research, aes(x=wosCountThru2011)) +
geom_histogram()
sd
sd <- ggplot(research, aes(x=log10(wosCountThru2011)) +
geom_histogram()
sd
sd <- ggplot(research, aes(x=log10(wosCountThru2011+1)) +
geom_histogram()
sd
sd <- ggplot(research, aes(x=log10(wosCountThru2011+1))) +
geom_histogram()
sd
sd <- ggplot(research, aes(x=log10(wosCountThru2011))) +
geom_histogram()
sd
sd <- ggplot(research, aes(x=sqrt(wosCountThru2011))) +
geom_histogram()
sd
sd <- ggplot(research, aes(x=log10(wosCountThru2011))) +
geom_density()
sd
sd <- ggplot(research, aes(x=sqrt(wosCountThru2011))) +
geom_density()
sd
tweets_bar + labs(title = "Mean tweets per journal per year",
x = "Journal", y = "Mean number of tweets")
tweets_bar + facet_wrap(~year, ncol = 2)
tweets_bar + labs(title = "Mean tweets per journal per year",
x = "Journal", y = "Mean number of tweets")
tweets_bar + labs(title = "Mean tweets per journal per year",
x = "Journal", y = "Mean number of tweets") +
theme_minimal()
tweets_bar + labs(title = "Mean tweets per journal per year",
x = "Journal", y = "Mean number of tweets") +
theme_minimal() +
facet_wrap(~year, ncol = 2)
p <- ggplot(data = research, aes(x = journal),
y = sqrt(wosCountThru2011)) +
geom_boxplot()
p
p <- ggplot(data = research, aes(x = journal,
y = sqrt(wosCountThru2011)) +
geom_boxplot()
p
p <- ggplot(data = research, aes(x = journal,
y = sqrt(wosCountThru2011))) +
geom_boxplot()
p
library("swirl")
swirl()
5 + 7
exit
exit()
q()
